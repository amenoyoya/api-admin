#!/bin/bash

cd $(dirname $0)
export USER_ID="${USER_ID:-$UID}"

case "$1" in
"init")
    tee ./.gitignore << \EOS
node_modules/
EOS
    tee Dockerfile << \EOS
FROM node:12-alpine

# Docker実行ユーザIDを環境変数から取得
ARG UID

RUN apk update && apk upgrade && \
    apk add --no-cache git python python3 g++ make && \
    rm -rf /var/cache/apk/* && \
    yarn global add strapi && \
    : 'Add user $UID if not exists' && \
    if [ "$(getent passwd $UID)" = "" ]; then useradd -S -u $UID worker; fi && \
    : 'Fix permission' && \
    mkdir -p /usr/local/share/.config/ && \
    chown -R $UID /usr/local/share/.config/

# 作業ディレクトリ: ./ => service://cli:/work/
WORKDIR /work/

# 作業ユーザ: Docker実行ユーザ
## => コンテナ側のコマンド実行で作成されるファイルパーミッションをDocker実行ユーザ所有に
USER $UID
EOS
    tee ./.env << \EOS
DB_PORT=27017
MONGO_EXPRESS_PORT=8081
RESTHEART_PORT=8080
EOS
    tee ./docker-compose.yml << \EOS
# ver 3.6 >= required: enable '-w' option for 'docker-compose exec'
version: "3.6"

volumes:
  # volume for db service container
  db-data:

services:
  # cli service container: node:12-alpine
  # $ docker-compose exec cli $command ...
  cli:
    build:
      context: ./ # build from ./Dockerfile
      args:
        # use current working user id
        UID: $USER_ID
    logging:
      driver: json-file
    # tcp://localhost:<port> => service://cli:<port>
    network_mode: host
    # enable terminal
    tty: true
    volumes:
      # ./ => service:node:/work/
      - ./:/work/
    environment:
      TZ: Asia/Tokyo

  # db service container: mongo db v4.4
  db:
    image: mongo:4.4
    logging:
      driver: json-file
    # restart: always
    ports:
      # tcp://localhost:${DB_PORT} => service://db:27017
      - ${DB_PORT:-27017}:27017
    volumes:
      # database data persistence
      - db-data:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      TZ: Asia/Tokyo

  # admin service container: mongo-express:latest
  admin:
    image: mongo-express:latest
    logging:
      driver: json-file
    # restart: always
    links:
      - db
    ports:
      # http://localhost:${MONGO_EXPRESS_PORT} => service://admin:8081
      - ${MONGO_EXPRESS_PORT:-8081}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: db # service://db
      ME_CONFIG_MONGODB_PORT: 27017
      TZ: Asia/Tokyo
  
  # mongodb rest api server service container: softinstigate/restheart:5.1.1
  restheart:
    image: softinstigate/restheart:5.1.1
    logging:
      driver: json-file
    # restart: always
    links:
      - db
    ports:
      # http://localhost:${RESTHEART_PORT} => service://restheart:8080
      - ${RESTHEART_PORT:-8080}:8080
    # ACL（ユーザ権限・認証）を変更したい場合は、自作の properties ファイルを指定して起動する
    ## Default `users.yml`:
    ### - id: admin, password: secret, role: admin
    ### - id: user, password: secret, role: user
    ## Default `acl.yml`:
    ### - admin: role can execute any request
    ### - user: role can execute any request on collection /{username}
    command: ["--envFile", "/opt/restheart/etc/default.properties"]
    environment:
      # MONGO_URI: mongodb://<user>:<password>@<host>
      MONGO_URI: mongodb://root:root@db
      TZ: Asia/Tokyo
EOS
    ;;
"cli")
    if [ "$w" != "" ]; then
        docker-compose exec -w "/work/$w" cli ${@:2:($#-1)}
    else
        docker-compose exec cli ${@:2:($#-1)}
    fi
    ;;
*)
    docker-compose $*
    ;;
esac